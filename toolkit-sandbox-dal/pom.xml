<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>toolkit-sandbox</artifactId>
        <groupId>com.phoenix</groupId>
        <version>0.4.RELEASE</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>toolkit-sandbox-dal</artifactId>
    <packaging>jar</packaging>

    <name>toolkit-sandbox-dal</name>
    <url>http://maven.apache.org</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <ibatis.version>2.3.4.726</ibatis.version>
        <mybatis.version>3.2.8</mybatis.version>
        <mysql.version>5.1.34</mysql.version>
        <hibernate.version>4.3.7.Final</hibernate.version>
        <druid.version>1.0.11</druid.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.4.182</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.phoenix</groupId>
            <artifactId>toolkit-sandbox-common</artifactId>
            <version>${project.parent.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.ibatis</groupId>
            <artifactId>ibatis-sqlmap</artifactId>
            <version>${ibatis.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>${mybatis.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
            <version>${spring.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${hibernate.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${hibernate.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>${druid.version}</version>
            <optional>true</optional>
        </dependency>


    </dependencies>


    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <dependencies>
                    <dependency>
                        <groupId>yguard</groupId>
                        <artifactId>yguard</artifactId>
                        <version>v2.4</version>
                        <scope>system</scope>
                        <systemPath>${basedir}/lib/yguard.jar</systemPath>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <configuration>
                            <tasks>
                                <property name="compile_classpath" refid="maven.compile.classpath" />
                                <property name="runtime_classpath" refid="maven.runtime.classpath" />
                                <property name="test_classpath" refid="maven.test.classpath" />
                                <property name="plugin_classpath" refid="maven.plugin.classpath" />

                                <echo message="compile classpath: ${compile_classpath}" />
                                <echo message="runtime classpath: ${runtime_classpath}" />
                                <echo message="test classpath:    ${test_classpath}" />
                                <echo message="plugin classpath:  ${plugin_classpath}" />
                                <taskdef name="yguard" classname="com.yworks.yguard.YGuardTask"
                                         classpath="${basedir}/lib/yguard.jar" />
                                <yguard>
                                    <!-- <externalclasses refid="compile_classpath"> </externalclasses> -->
                                    <!-- There are some external libraries used - Maven knows details. -->
                                    <externalclasses>
                                        <pathelement path="${compile_classpath}" />
                                    </externalclasses>
                                    <inoutpair
                                            in="target/${project.build.finalName}.${project.packaging}"
                                            out="target/${project.build.finalName}.jar" />
                                    <!-- 不同工程需要修改的地方 -->
                                    <obfuscate logfile="target/yguard.log.xml"
                                               replaceclassnamestrings="true"
                                               shrinklog="${project.auto.deploy.dir}/yguard.log.xml">
                                        <!-- 有错误时将中断该targe t -->
                                        <property name="error-checking" value="pedantic" />
                                        <property name="language-conformity" value="illegal" />
                                        <!-- 采用混合方式产生名字 -->
                                        <property name="naming-scheme" value="MIX" />
                                        <!--<property name="expose-attributes" value=""/> -->
                                        <!--设置需要暴露哪些信息，这些信息将不会被混淆 -->
                                        <expose>

                                            <!--仅保持类名不变，完全混淆类的其他信息 -->
                                            <class classes="private" methods="private" fields="none">
                                                <patternset id="dal">
                                                    <include name="com.phoenix.dal.hibernate.BaseDao" />
                                                    <include name="com.phoenix.dal.hibernate.impl.BaseDaoImpl" />
                                                    <include name="com.phoenix.dal.hibernate4.HibernateDaoSupport" />
                                                    <include name="com.phoenix.dal.HibernateDao" />
                                                    <include name="com.phoenix.model.Pager" />
                                                </patternset>
                                            </class>


                                            <!-- 保持所有的属性(过时的方法，文件名，行号、本地变量表)，在系统允许过程中，可能会发生错误信息， 如果不保存这些信息，出错时很难跟踪代码，为方便调试保留了这些信息 -->
                                            <attribute
                                                    name="Deprecated, SourceFile, LineNumberTable, LocalVariableTable">
                                                <patternset refid="dal" />
                                            </attribute>
                                        </expose>

                                        <!--设置所有用到得第三方库，不混淆它们 -->





                                        <!--调整jar包的资源文件中的引用的类名 -->
                                        <adjust replaceContent="true" replaceName="true">
                                            <include name="**/*.xml" />
                                            <include name="**/*.hbm.xml" />
                                            <include name="./**/*.xml" />
                                            <include name="./**/*.hbm.xml" />
                                            <include name="**/*.properties" />
                                            <include name="./**/*.properties" />
                                        </adjust>

                                    </obfuscate>

                                </yguard>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
